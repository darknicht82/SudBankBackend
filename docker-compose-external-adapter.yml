version: '3.8'

services:
  # Regulatory Service - Procesamiento de reportes regulatorios
  regulatory-service:
    build:
      context: .
      dockerfile: backend/modules/regulatory-service/Dockerfile
    container_name: sudbankcore-regulatory-service
    ports:
      - "8085:8085"
    environment:
      # Configuraci贸n del servicio
      - SERVER_PORT=8085
      - SPRING_PROFILES_ACTIVE=docker
      
      # URL del SQL Server Adapter (externo)
      - SQLSERVER_ADAPTER_URL=http://host.docker.internal:8080
      
      # Configuraci贸n de base de datos (si es necesaria)
      - DB_HOST=host.docker.internal
      - DB_PORT=1433
      - DB_NAME=SBESTRUCTURASCONTROLDB
      - DB_USERNAME=sa
      - DB_PASSWORD=ssm98
      
      # Configuraci贸n de seguridad
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=sudbank2025
      
      # Configuraci贸n de logging
      - LOGGING_LEVEL_COM_SUDBANK=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=INFO
      
    volumes:
      # Volumen para logs
      - ./logs:/app/logs
      
      # Volumen para reportes generados
      - ./reports:/app/reports
      
    networks:
      - sudbankcore-network
      
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  sudbankcore-network:
    driver: bridge
    name: sudbankcore-network

volumes:
  sudbankcore-logs:
    driver: local
  sudbankcore-reports:
    driver: local 