version: '3.8'

services:
  # ========================================
  # SQL SERVER ADAPTER (Java 8)
  # ========================================
  sqlserver-adapter:
    build:
      context: ./sqlserver-adapter
      dockerfile: Dockerfile
    container_name: sudbankcore-sqlserver-adapter
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=host.docker.internal
      - DB_PORT=1433
      - DB_NAME=SBESTRUCTURASCONTROLDB
      - DB_USERNAME=sa
      - DB_PASSWORD=ssm98
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=sudbank2025
    volumes:
      - ./logs:/app/logs
    networks:
      - sudbankcore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ========================================
  # REGULATORY SERVICE (Java 17)
  # ========================================
  regulatory-service:
    build:
      context: ./backend/modules/regulatory-service
      dockerfile: Dockerfile
    container_name: sudbankcore-regulatory-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SQLSERVER_ADAPTER_URL=http://sqlserver-adapter:8080
      - SERVER_PORT=8085
    volumes:
      - ./logs:/app/logs
      - ./reports:/app/reports
    networks:
      - sudbankcore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - sqlserver-adapter

# ========================================
# NETWORKS
# ========================================
networks:
  sudbankcore-network:
    driver: bridge

# ========================================
# VOLUMES
# ========================================
volumes:
  logs:
  reports: 